<?xml version="1.0" encoding="UTF-8"?> <!-- Define la versión XML y la codificación utilizada -->

<!-- Importa clases necesarias para el diseño de la interfaz -->
<?import javafx.geometry.Insets?> <!-- Para manejar el espacio interno (padding) de los elementos -->
<?import javafx.scene.control.Button?> <!-- Para usar el elemento Button -->
<?import javafx.scene.layout.VBox?> <!-- Para usar el layout VBox -->

<!-- Define un VBox como contenedor principal con propiedades específicas -->
<VBox xmlns:fx="http://javafx.com/fxml" fx:controller="org.uce.app.controllers.PantallaPrincipalController" spacing="20" alignment="CENTER" styleClass="main-vbox">
    <!-- xmlns:fx define el espacio de nombres para FXML -->
    <!-- fx:controller especifica el controlador asociado a esta vista -->
    <!-- spacing define el espacio entre los elementos del VBox -->
    <!-- alignment alinea los elementos en el centro -->
    <!-- styleClass aplica una clase de estilo CSS -->

    <!-- Define el padding (espacio interno) del VBox -->
    <padding>
        <Insets top="20" right="20" bottom="20" left="20"/> <!-- Establece 20 píxeles de padding en cada lado -->
    </padding>

    <!-- Botón para gestionar pacientes -->
    <Button text="Gestión de Pacientes" onAction="#gestionarPacientes" styleClass="menu-button"/>
    <!-- text define el texto que aparece en el botón -->
    <!-- onAction especifica el método en el controlador que se llama al hacer clic en el botón -->
    <!-- styleClass aplica una clase de estilo CSS -->

    <!-- Botón para gestionar citas -->
    <Button text="Gestión de Citas" onAction="#gestionarCitas" styleClass="menu-button"/>
    <!-- Igual que el botón anterior, pero para gestionar citas -->

    <!-- Botón para gestionar el historial médico -->
    <Button text="Historial Médico" onAction="#gestionarHistorialMedico" styleClass="menu-button"/>
    <!-- Igual que los botones anteriores, pero para gestionar el historial médico -->

</VBox>
